#Questão 2
def romanos(x):
  conversor={1000: 'M', 900: 'CM', 500: 'D', 400: 'CD', 100: 'C', 90: 'XC', 50: 'L', 40: 'XL', 10: 'X', 9: 'IX', 5: 'V', 4: 'IV', 1: 'I'}
  numero=''
  for valor, romano in conversor.items():
    while x >= valor:
      numero = numero + romano
      x = x - valor
  return numero   
romanos()   

#Questão 3 item a)

def potencia(x:float, n:int):
  resultado=1
  if n>=0:
    for _ in range(n):
      resultado=resultado*x
  else:
    for _ in range(-n):
      resultado = resultado*(1/x)
  return resultado
potencia(2.0, 4)

#Questão 3 item b)

def potencialogn(x:float, n:int):
  resultado=1
  while resultado < x**(n):
    resultado=resultado*x
  return resultado
potencialogn(2.0, 4)


#Questão 4

def odd_one_out(lista):
    contagem = {}
    for num in lista: 
        contagem[num]=contagem.get(num, 0)+1 #conta quantas vezes um elemento aparece na lista e caso seja a primeira vez, a contagem é 0 + 1
    for numero, frequencia in contagem.items():
        if frequencia==1: #se valor = 1, então o elemento só aparece uma vez na lista
            return numero
odd_one_out([1, 1, 2, 3, 4, 5, 3, 4, 2])

#Questão 5
def longest_common_prefix(lista):
    for r in range(1, len(lista)):
        prefixo=''
        for j in range(len(lista[0])):
            if lista[0][j]==lista[r][j]:
                prefixo= prefixo+lista[0][j]
            else:
                break
    return prefixo
            
longest_common_prefix(['flower', 'floow', 'fla', 'aaaaa'])

#a complexidade desse código é O(n*m)


